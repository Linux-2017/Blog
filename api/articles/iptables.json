{"title":"iptables/netfilter入门到进阶","slug":"iptables","date":"2017-05-02T03:15:58.000Z","updated":"2017-11-19T13:15:37.000Z","comments":true,"excerpt":"","content":"<h3 id=\"Iptables-配置\"><a href=\"#Iptables-配置\" class=\"headerlink\" title=\"Iptables  配置\"></a>Iptables  配置</h3><blockquote>\n<p>iptables,一个运行在用户空间的应用软件，通过控制Linux内核netfilter模块，来管理网络数据包的流动与转送。</p>\n</blockquote>\n<p><strong>Table</strong></p>\n<ul>\n<li><p>filter</p>\n<blockquote>\n<p>主要用于过滤数据包，该表根据系统管理员预定义的一组规则过滤符合条件的数据包。对于防火墙而言，注意利用在filter表中指定的规则来实现对数据包的过滤。Filter表是默认的表，包含了INPUT链，FORWARD链，OUTPUT链，在filter表中只能允许数据包进行接受，丢弃的操作，而无法对数据包进行更改。</p>\n</blockquote>\n</li>\n<li><p>nat</p>\n<blockquote>\n<p>主要用于网络地址转换，该表可以实现一对一，一堆多，多对多等NAT工作，iptables就是使用该表实现共享上网的，NAT表包含了PREROUTING，INPUT，OUPUT，POSTROUTING链</p>\n</blockquote>\n</li>\n<li><p>mangle</p>\n<blockquote>\n<p>主要用于对指定的数据包进行更改，在内核版本2.4.18后包含的链为:INPUT链，RORWARD链，OUTPUT链，POSTROUTING链，PREROUTING链</p>\n</blockquote>\n</li>\n<li><p>raw</p>\n<blockquote>\n<p>只使用在PREROUTING链和OUTPUT链上，因为优先级最高，从而对收到的数据包在连接跟踪前进行处理。一旦用户使用了RAW表，RAW表处理完后，将跳过NAT表和ip_conntrack处理，即不再做地址转换和数据包的链接跟踪处理了。</p>\n</blockquote>\n</li>\n<li><p>Table之间的优先级顺序</p>\n<p>Raw—-&gt;Mangle—-&gt;Nat—-&gt;Filter</p>\n<p>​</p>\n</li>\n</ul>\n<p><strong>Chain</strong></p>\n<ul>\n<li>PREROUTING</li>\n<li>INPUT</li>\n<li>FORWARD</li>\n<li>OUTPUT</li>\n<li>POSTROUTING</li>\n</ul>\n<p><strong>Iptables 命令格式</strong></p>\n<blockquote>\n<p>iptables [-t table] COMMAND [chain] [PARAMETERS] [-m matchname [per-match-options]  [-j targetname [per-target-options]]</p>\n</blockquote>\n<ul>\n<li><p>COMMAND</p>\n<ul>\n<li>链管理<ul>\n<li>-P    定义默认策略<ul>\n<li>-X  删除自定义链</li>\n<li>-N新建自定义链</li>\n<li>-E修改chain名</li>\n<li>-F删除表中所有规则</li>\n<li>-Z将表中数据包计数器和流量计数器归零</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>规则管理<ul>\n<li>-A    追加<ul>\n<li>-I插入</li>\n<li>-R替换</li>\n<li>-D删除</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>查看<ul>\n<li>-L    查看<ul>\n<li>-n数字输出。IP地址和端口号将打印在数字格式。</li>\n<li>-v详细</li>\n<li>-x展开数字显示数据包和字节计数器的确切值，而不是仅K中的舍入数</li>\n<li>–line-numbers显示链行号</li>\n<li>-S Print all rules in the selected chain</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>匹配条件</p>\n<ul>\n<li><p>基本匹配PARAMETERS</p>\n<ul>\n<li>-s    source<ul>\n<li>-ddestination</li>\n<li>-pprotocol</li>\n<li>-i流入接口</li>\n<li>-o流出接口</li>\n<li>-m模块</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>扩展匹配条件</p>\n<ul>\n<li><p>隐式扩展:在使用-p选项指明了特定的协议时，无需再同时使用-m选项指明扩展模块的扩展机制;</p>\n<p>-p tcp：可直接使用tcp扩展模块的专用选项</p>\n<p>​    [!] –source-port,–sport prot[:port] 匹配报文源端口;可以给出多个端口，但只能是连续的端口范围;</p>\n<p>​    [!] –destination -port,–dport port[:port] 匹配报文目标端口;可以给出多个端口，但只能是连续的端口范围;</p>\n<p>​    [!] –tcp-flags mask comp 匹配报文中的tcp协议标志位; Flags are：SYN ACK FIN RST URG PSH ALL NONE;</p>\n<p>​        mask：要检查的FLAGS LIST，以逗号分割;</p>\n<p>​        comp：在mask给定的诸多的FLAGS中，其值为1的FLAGS列表，余下的值必须为0;</p>\n<p>​            –tcp-flags SYN,ACK,FIN,RST SYN</p>\n<p>​            –tcp-flags ALL ALL</p>\n<p>​    [!] –syn: –tcp-flags SYN,ACK,FIN,RST SYN</p>\n<p>-p udp:可直接使用udp协议扩展模块的专用选项</p>\n<p>​    [!] –source-port,–sport port[:port]</p>\n<p>​    [!] –destination-port,–dport port[:port]</p>\n<p>[!] –icmp-type {type[/code]|typename}</p>\n<p>​    0/0: reply</p>\n<p>​    8/0:request</p>\n</li>\n<li><p>显式扩展:必须使用-m选项要调用的扩展模块机制;</p>\n<p>1.multiport</p>\n<p>​    以离散或连续的方式定义多端口匹配条件，最多15个;</p>\n<p>​    [!] –source-ports,–sports port[,port|,port:port] 指定多个源端口</p>\n<p>​    [!] –destination-ports,–dports port[,port|,port:port] 指定多个目标端口</p>\n<p>2.iprange</p>\n<p>​    以连续地址块的方式来指明多IP地址匹配条件</p>\n<p>​    [!] –src-range from [-to]</p>\n<p>​    [!] –dst-range from [-to]</p>\n<p>​    例如:</p>\n<p>​    # iptables -I INPUT -d 172.16.0.7 -p tcp -m multiport –dports 22,80,139,445,3306 -m iprange –src-range 172.16.0.61-172.16.0.70 -j REJECT</p>\n<p>3.time</p>\n<p>​    –timestart hh:mm[:ss]</p>\n<p>​    –timestop hh:mm[:ss]</p>\n<p>​    [!] –weekdays day[,day..]</p>\n<p>​    [!] –monthdays day[,day…]</p>\n<p>​    –datestart YYYY[-MM[-DD[Thh[:mm[:ss]]]]]    </p>\n<p>​    –datestop YYYY[-MM[-DD[Thh[:mm[:ss]]]]]    </p>\n<p>​    –kerneltz:使用内核配置的失去而非默认的UTC</p>\n<p>​    例如:</p>\n<p>​    iptables -A INPUT -p tcp –dport 22 -m time –timestart 13:45 –timestop 13:50 –kerneltz  -j DROP</p>\n<p>4.string</p>\n<p>​    –algo {bm|kmp}</p>\n<p>​    [!] –string pattern</p>\n<p>​    [!] –hex-string pattern</p>\n<p>​    –form offset</p>\n<p>​    –to offset</p>\n<p>​    例如</p>\n<p>​    ~]# iptables -I OUTPUT -m string –algo bm –string “gay” -j REJECT    </p>\n<p>5.connlimit</p>\n<p>​    Allows  you  to  restrict  the  number  of parallel connections to a server per client IP address (or client address block).</p>\n<p>​    –connlimit-upto n</p>\n<p>​    –connlimit-above n</p>\n<p>​    eg:</p>\n<p>​    iptables -I INPUT -d  172.18.0.7     -p tcp –syn –dport 22 -m connlimit –connlimit-adove 2 -j REJECT</p>\n<p>6.limit</p>\n<p>​    –limit rete [/second/minute/hour/day]</p>\n<p>​    –limit burst number</p>\n<p>7.state</p>\n<p>​    [!] –state state</p>\n<p>​    INVALID,ESTABLISHED,NEW,RELATED or UNTRACKED</p>\n<p>​    INVALID:无法识别的连接;</p>\n<p>​    RELATED:相关联的连接，当前请求是一个新的请求，但附属与某个已存在的连接;</p>\n<p>​    UNTRACKED:未追踪的连接;</p>\n<p>​    </p>\n<p>​    state扩展:</p>\n<p>​        内核模块装载:</p>\n<p>​            nf_conntrack</p>\n<p>​            nf_conntrack_ipv4</p>\n<p>​        手动装载</p>\n<p>​            nf_conntrack_ftp</p>\n<p>​    追踪到的连接</p>\n<p>​        /proc/net/nf_conntrack</p>\n<p>​    调整可记录的连接数量最大值</p>\n<p>​        /proc/sys/net/nf_conntrack_max</p>\n<p>​    超时时长</p>\n<p>​        /proc/sys/net/netfilter/*timeout*    </p>\n<p>​        </p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>Targetname</p>\n<ul>\n<li><p>ACCEPT</p>\n</li>\n<li><p>DROP</p>\n</li>\n<li><p>REJECT</p>\n<p>–reject-with type </p>\n<p>​    icmp-net-unreachable</p>\n<p>​    icmp-host-unreachable</p>\n<p>​    icmp-port-unreachable</p>\n<p>​    icmp-proto-unreach‐ able</p>\n<p>​    icmp-net-prohibited</p>\n<p>​    icmp-host-prohibited</p>\n<p>​    icmp-admin-prohibited (*)</p>\n<p>​    icmp-port-unreachable is the default</p>\n</li>\n<li><p>RETURN</p>\n</li>\n</ul>\n</li>\n</ul>\n<p><strong>Nat</strong></p>\n<ul>\n<li><p>SNAT</p>\n<blockquote>\n<p>This  target  is only valid in the nat table, in the POSTROUTING and INPUT chains, and user-defined chains which are only called from those chains.</p>\n<p>–to-source [ipaddr[-ipaddr]]</p>\n</blockquote>\n</li>\n<li><p>DNAT</p>\n<blockquote>\n<p>This target is only valid in the nat table, in the PREROUTING and OUTPUT chains, and user-defined chains  which  are only  called from those chains.</p>\n<p>–to-destination [ipaddr[-ipaddr]] [:port[:port]]</p>\n</blockquote>\n</li>\n<li><p>MASQUERADE</p>\n<blockquote>\n<p>This target is only valid in the nat table, in the POSTROUTING chain.  It  should  only  be  used  with  dynamically assigned  IP (dialup) connections: if you have a static IP address, you should use the SNAT target.</p>\n</blockquote>\n</li>\n<li><p>REDIRECT</p>\n<blockquote>\n<p>–to-ports port [-port]</p>\n</blockquote>\n</li>\n<li><p>添加规则</p>\n<blockquote>\n<p>iptables -t nat -A PREROUTING -i eth0 -s 10.0.0.0/8 -j DROP</p>\n<p> iptables -t nat -A PREROUTING -i eth0 -s 172.16.0.0/12 -j DROP</p>\n<p>iptables -t nat -A PREROUTING -i eth0 -s 192.168.0.0/16 -j DROP</p>\n<p>防止外网用户用内网ip欺骗</p>\n</blockquote>\n</li>\n<li><p>删除规则</p>\n<blockquote>\n<p>iptables -F -t nat</p>\n<p>iptables -X -t nat</p>\n<p>iptables -Z -t nat</p>\n</blockquote>\n</li>\n<li><p>eg</p>\n<pre><code>   # IMPORTANT: Activate IP-forwarding in the kernel!\n   # Disabled by default!\n   #\n   $&gt; echo &quot;1&quot; &gt; /proc/sys/net/ipv4/ip_forward   \n   # Load various modules. Usually they are already loaded \n   # (especially for newer kernels), in that case \n   # the following commands are not needed.\n   #\n   # Load iptables module:\n   $&gt; modprobe ip_tables\n   #\n   # activate connection tracking\n   # (connection&#39;s status are taken into account)\n   $&gt; modprobe ip_conntrack\n   #\n   # Special features for IRC:\n   $&gt; modprobe ip_conntrack_irc\n   #\n   # Special features for FTP:\n   $&gt; modprobe ip_conntrack_ftp\n   $&gt; iptables -t nat -A POSTROUTING -o eth1 -j MASQUERADE\n</code></pre></li>\n</ul>\n<p><strong>常用配置</strong></p>\n<blockquote>\n<p>DROP非法连接</p>\n<p>iptables -A INPUT -m state –state INVALID -j DROP</p>\n<p>iptables -A OUTPUT -m state –state INVALID -j DROP</p>\n<p>iptables -A FORWARD -m state –state INVALID -j DROP</p>\n<p>允许已经建立和相关的连接</p>\n<p>iptables -A INOUT -m state –state ESTABLISHED,RELATED -j ACCEPT</p>\n<p>iptables -A OUTPUT -m state –state  ESTABLISHED,RELATED -j ACCEPT</p>\n<p>放行smb服务</p>\n<p>iptables -I INPUT 2 -d 172.18.50.72 -p tcp -m multiport –dports 139,445 -m state –state NEW -j ACCEPT</p>\n<p>放行vsftpd</p>\n<p>iptables -I INPUT 2 -d 172.18.50.72 -m state –state ESTABLISHED,RELATED -j ACCEPT</p>\n<p>需要装载ftp模块</p>\n<p>modprobe nf_conntrack_ftp</p>\n</blockquote>\n<p><strong>保存和载入规则</strong></p>\n<ul>\n<li><p>保存</p>\n<blockquote>\n<p>iptables-save &gt; /path/filename</p>\n</blockquote>\n</li>\n<li><p>重载</p>\n<blockquote>\n<p>iptables-restore &lt; /path/filename</p>\n</blockquote>\n</li>\n<li><p>centos 6</p>\n<ul>\n<li><p>保存规则</p>\n<blockquote>\n<p>service iptavles save</p>\n<p>保存规则与/etc/sysconfig/iptables文件，覆盖保存</p>\n</blockquote>\n</li>\n<li><p>重载规则</p>\n<blockquote>\n<p>service iptables restart</p>\n<p>默认重载/etc/sysconfig/iptables文件中的规则</p>\n</blockquote>\n</li>\n<li><p>配置文件</p>\n<blockquote>\n<p>/etc/sysconfig/iptables-config</p>\n</blockquote>\n</li>\n</ul>\n</li>\n</ul>\n<p><strong>规则优化</strong></p>\n<blockquote>\n<p>使用自定义链管理特定的相关规则，模块化管理规则</p>\n</blockquote>\n<ul>\n<li>优先放行双向状态为ESTABLISHED的报文</li>\n<li>服务与不同类别的功能的规则，匹配到报文可能性更大的放前面</li>\n<li>服务与同一类别的功能的规则，匹配条件较为严格的放在前面</li>\n<li>设置默认策略:白名单机制<ul>\n<li>iptables -P</li>\n<li>建议在规则的最后定义规则作为默认策略</li>\n</ul>\n</li>\n</ul>\n","categories":[],"tags":[{"name":"Iptables","path":"api/tags/Iptables.json"}]}