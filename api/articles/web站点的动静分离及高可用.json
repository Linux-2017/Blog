{"title":"web站点的动静分离及高可用","slug":"web站点的动静分离及高可用","date":"2017-05-18T08:40:00.000Z","updated":"2017-11-19T13:15:37.000Z","comments":true,"excerpt":"","content":"<h3 id=\"web站点的动静分离及高可用\"><a href=\"#web站点的动静分离及高可用\" class=\"headerlink\" title=\"web站点的动静分离及高可用\"></a>web站点的动静分离及高可用</h3><p><strong>要求</strong>：动静分离部署wordpress，动静都要能实现负载均衡，<img src=\"http://omsab2via.bkt.clouddn.com/haproxy.png\" alt=\"enter image description here\"></p>\n<h4 id=\"全局\"><a href=\"#全局\" class=\"headerlink\" title=\"全局\"></a>全局</h4><pre><code>iptables -F\nsetenforce 0\n</code></pre><h4 id=\"Ca\"><a href=\"#Ca\" class=\"headerlink\" title=\"Ca\"></a>Ca</h4><p>生成私钥</p>\n<blockquote>\n<p>(umask 066;openssl genrsa -out /etc/pki/CA/private/cakey.pem 4096)</p>\n</blockquote>\n<p>自颁发证书</p>\n<blockquote>\n<p>cd /etc/pki/CA<br>openssl req -new -x509 -key private/cakey.pem -out cacert.pem -days 99999<br>touch /etc/pki/CA/index.txt<br>echo 01 &gt; /etc/pki/CA/serial</p>\n</blockquote>\n<p>颁发</p>\n<blockquote>\n<p>opensl ca -in test.csr -out /etc/pki/CA/certs/test.crt -days 365</p>\n</blockquote>\n<h4 id=\"Nfs\"><a href=\"#Nfs\" class=\"headerlink\" title=\"Nfs\"></a>Nfs</h4><pre><code>yum -y install nfs-utils\nvim /etc/exprot\n/www 172.18.0.0/16(rw,async)\nsystemctl start nfs\nexportfs -ar\n</code></pre><h4 id=\"Mysql\"><a href=\"#Mysql\" class=\"headerlink\" title=\"Mysql\"></a>Mysql</h4><pre><code>yum -y install mysql-server\ncreate database wp;\ngrant all privileges on wp.* to wp@&#39;172.18.50.61&#39; by &#39;1234&#39;;\ngrant all privileges on wp.* to wp@&#39;172.18.50.62&#39; by &#39;1234&#39;;\nflush privileges;\n</code></pre><h4 id=\"static端\"><a href=\"#static端\" class=\"headerlink\" title=\"static端\"></a>static端</h4><pre><code>yum -y install httpd \nmkdir -v /www\nmount -t nfs 172.18.50.73:/www /www\n</code></pre><p>记录真实ip需要将httpd的log格式%h改为%{X-Forwarded-For}i，同时haproxy需开启forwardfor这个option</p>\n<h4 id=\"php端\"><a href=\"#php端\" class=\"headerlink\" title=\"php端\"></a>php端</h4><pre><code>yum -y install httpd php\nservice start httpd\nmkdir -v /www\nmount -t nfs 172.18.50.73:/www /www\n</code></pre><p>记录真实ip需要将httpd的log格式%h改为%{X-Forwarded-For}i，同时haproxy需开启forwardfor这个option</p>\n<h4 id=\"Haproxy-1\"><a href=\"#Haproxy-1\" class=\"headerlink\" title=\"Haproxy 1\"></a>Haproxy 1</h4><p><strong>申请证书</strong></p>\n<ul>\n<li>建立私钥并生产申请文件<br>```<br>(umask 077;openssl genrsa -out /etc/pki/tls/private/test.key 1024)<br>cd /etc/pki/tls/private<br>openssl req -new -key test.key -out /etc/pki/tls/test.csr -days 365</li>\n</ul>\n<pre><code>将申请文件scp到ca端颁发证书\n</code></pre><p>mkdir -pv /etc/ssl<br>cat  demo.crt demo.key &gt; demo.pem  #crt后的证书文件要求PEM格式，且同时包含证书和与之匹配的所有私钥；</p>\n<pre><code>\n</code></pre><p>yum -y install haproxy<br>yum -y install keepalived</p>\n<pre><code>\n</code></pre><p>[root@71 ~]# cat /etc/haproxy/haproxy.cfg</p>\n<p>#———————————————————————</p>\n<h1 id=\"Example-configuration-for-a-possible-web-application-See-the\"><a href=\"#Example-configuration-for-a-possible-web-application-See-the\" class=\"headerlink\" title=\"Example configuration for a possible web application.  See the\"></a>Example configuration for a possible web application.  See the</h1><h1 id=\"full-configuration-options-online\"><a href=\"#full-configuration-options-online\" class=\"headerlink\" title=\"full configuration options online.\"></a>full configuration options online.</h1><p>#</p>\n<h1 id=\"http-haproxy-1wt-eu-download-1-4-doc-configuration-txt\"><a href=\"#http-haproxy-1wt-eu-download-1-4-doc-configuration-txt\" class=\"headerlink\" title=\"http://haproxy.1wt.eu/download/1.4/doc/configuration.txt\"></a><a href=\"http://haproxy.1wt.eu/download/1.4/doc/configuration.txt\" target=\"_blank\" rel=\"noopener\">http://haproxy.1wt.eu/download/1.4/doc/configuration.txt</a></h1><p>#</p>\n<p>#———————————————————————</p>\n<p>#———————————————————————</p>\n<h1 id=\"Global-settings\"><a href=\"#Global-settings\" class=\"headerlink\" title=\"Global settings\"></a>Global settings</h1><p>#———————————————————————<br>global</p>\n<pre><code># to have these messages end up in /var/log/haproxy.log you will\n# need to:\n#\n# 1) configure syslog to accept network log events.  This is done\n#    by adding the &#39;-r&#39; option to the SYSLOGD_OPTIONS in\n#    /etc/sysconfig/syslog\n#\n# 2) configure local2 events to go to the /var/log/haproxy.log\n#   file. A line like the following can be added to\n#   /etc/sysconfig/syslog\n#\n#    local2.*                       /var/log/haproxy.log\n#\nlog         127.0.0.1 local2\n\nchroot      /var/lib/haproxy\npidfile     /var/run/haproxy.pid\nmaxconn     4000\nuser        haproxy\ngroup       haproxy\ndaemon\n\n# turn on stats unix socket\nstats socket /var/lib/haproxy/stats\n</code></pre><p>#———————————————————————</p>\n<h1 id=\"common-defaults-that-all-the-‘listen’-and-‘backend’-sections-will\"><a href=\"#common-defaults-that-all-the-‘listen’-and-‘backend’-sections-will\" class=\"headerlink\" title=\"common defaults that all the ‘listen’ and ‘backend’ sections will\"></a>common defaults that all the ‘listen’ and ‘backend’ sections will</h1><h1 id=\"use-if-not-designated-in-their-block\"><a href=\"#use-if-not-designated-in-their-block\" class=\"headerlink\" title=\"use if not designated in their block\"></a>use if not designated in their block</h1><p>#———————————————————————<br>defaults<br>    mode                    http<br>    log                     global<br>    option                  httplog<br>    option                  dontlognull<br>    option http-server-close<br>    option forwardfor       except 127.0.0.0/8<br>    option                  redispatch<br>    retries                 3<br>    timeout http-request    10s<br>    timeout queue           1m<br>    timeout connect         10s<br>    timeout client          1m<br>    timeout server          1m<br>    timeout http-keep-alive 10s<br>    timeout check           10s<br>    maxconn                 3000</p>\n<p>#———————————————————————</p>\n<h1 id=\"main-frontend-which-proxys-to-the-backends\"><a href=\"#main-frontend-which-proxys-to-the-backends\" class=\"headerlink\" title=\"main frontend which proxys to the backends\"></a>main frontend which proxys to the backends</h1><p>#———————————————————————<br>frontend  localhost<br>    bind <em>:80<br>    bind </em>:443 ssl crt /etc/ssl/ssl.pem<br>    mode http<br>    redirect scheme https if !{ ssl_fc }</p>\n<pre><code>acl url_static       path_end       -i .jpg .gif .png \nuse_backend static          if url_static\ndefault_backend dy \noption forwardfor\n</code></pre><p>listen stats<br>    bind *:10000<br>    acl admin_src src 172.18.100.7<br>    stats enable<br>    stats uri /haproxy?admin<br>    stats auth admin:admin<br>    block  if ! admin_src</p>\n<p>#———————————————————————</p>\n<h1 id=\"static-backend-for-serving-up-images-stylesheets-and-such\"><a href=\"#static-backend-for-serving-up-images-stylesheets-and-such\" class=\"headerlink\" title=\"static backend for serving up images, stylesheets and such\"></a>static backend for serving up images, stylesheets and such</h1><p>#———————————————————————<br>backend static<br>    balance     roundrobin<br>    server      static 172.18.50.50:80 check<br>    server      static 172.18.50.73:80 check</p>\n<p>#———————————————————————</p>\n<h1 id=\"round-robin-balancing-between-the-various-backends\"><a href=\"#round-robin-balancing-between-the-various-backends\" class=\"headerlink\" title=\"round robin balancing between the various backends\"></a>round robin balancing between the various backends</h1><p>#———————————————————————<br>backend dy<br>    balance     roundrobin<br>    server  app1 172.18.50.61:80 check<br>    server  app2 172.18.50.62:80 check</p>\n<pre><code>**keepalived**\n</code></pre><p>[root@71 ~]# cat /etc/keepalived/keepalived.conf<br>! Configuration File for keepalived</p>\n<p>global_defs {<br>   notification_email {<br>     acassen@firewall.loc<br>     failover@firewall.loc<br>     sysadmin@firewall.loc<br>   }<br>   notification_email_from Alexandre.Cassen@firewall.loc<br>   smtp_server 192.168.200.1<br>   smtp_connect_timeout 30<br>   router_id LVS_DEVEL<br>   vrrp_mcast_group4 224.0.0.50<br>}</p>\n<p>vrrp_instance ha1 {<br>    state MASTER<br>    interface ens33<br>    virtual_router_id 50<br>    priority 100<br>    advert_int 1<br>    authentication {<br>        auth_type PASS<br>        auth_pass password<br>    }<br>    virtual_ipaddress {</p>\n<pre><code>172.18.50.71/16 dev ens33\n\n}\n</code></pre><p>}</p>\n<pre><code>#### Haproxy 2\nhaproxy 2 proxy配置与 1一致\n</code></pre><p>yum install -y haproxy keepalived<br>[root@72 keepalived]# cat /etc/keepalived/keepalived.conf<br>! Configuration File for keepalived</p>\n<p>global_defs {<br>   notification_email {<br>     acassen@firewall.loc<br>     failover@firewall.loc<br>     sysadmin@firewall.loc<br>   }<br>   notification_email_from Alexandre.Cassen@firewall.loc<br>   smtp_server 192.168.200.1<br>   smtp_connect_timeout 30<br>   router_id LVS_DEVEL<br>   vrrp_mcast_group4 224.0.0.50<br>}</p>\n<p>vrrp_instance ha1 {<br>    state BACKUP<br>    interface ens33<br>    virtual_router_id 50<br>    priority 98<br>    advert_int 1<br>    authentication {<br>        auth_type PASS<br>        auth_pass password<br>    }<br>    virtual_ipaddress {</p>\n<pre><code>172.18.50.71/16 dev ens33\n\n}\n</code></pre><p>}<br>```</p>\n<h4 id=\"验证\"><a href=\"#验证\" class=\"headerlink\" title=\"验证\"></a>验证</h4><blockquote>\n<p>haproxy是否动静分离</p>\n</blockquote>\n<p><img src=\"http://omsab2via.bkt.clouddn.com/h1.png\" alt=\"enter image description here\"></p>\n<p><img src=\"http://omsab2via.bkt.clouddn.com/h2.png\" alt=\"enter image description here\"></p>\n<p><img src=\"http://omsab2via.bkt.clouddn.com/h3.png\" alt=\"enter image description here\"></p>\n<p><img src=\"http://omsab2via.bkt.clouddn.com/chrome.png\" alt=\"enter image description here\"><br>chrome浏览器会提示不安全的脚本</p>\n<blockquote>\n<p>验证keepalived</p>\n<p>haproxy1：systemctl stop haproxy keepalived后ha2成功拿到ip</p>\n</blockquote>\n<p><img src=\"http://omsab2via.bkt.clouddn.com/1.png\" alt=\"enter image description here\"><img src=\"http://omsab2via.bkt.clouddn.com/2.png\" alt=\"enter image description here\"><br>web正常</p>\n","categories":[{"name":"Haproxy","path":"api/categories/Haproxy.json"}],"tags":[{"name":"Haproxy","path":"api/tags/Haproxy.json"},{"name":"Keepalived","path":"api/tags/Keepalived.json"}]}