{"title":"Fastdfs安装配置","slug":"Fastdfs安装配置","date":"2017-06-12T13:28:08.000Z","updated":"2017-11-19T13:15:37.000Z","comments":true,"excerpt":"","content":"<h2 id=\"Fastdfs安装配置\"><a href=\"#Fastdfs安装配置\" class=\"headerlink\" title=\"Fastdfs安装配置\"></a>Fastdfs安装配置</h2><blockquote>\n<p>项目地址：<a href=\"https://github.com/happyfish100\" target=\"_blank\" rel=\"noopener\">https://github.com/happyfish100</a></p>\n</blockquote>\n<h3 id=\"实验环境\"><a href=\"#实验环境\" class=\"headerlink\" title=\"实验环境\"></a>实验环境</h3><p><img src=\"http://omsab2via.bkt.clouddn.com/fastdfs.png\" alt=\"enter image description here\"></p>\n<p>###安装前<br>所有节点均需</p>\n<pre><code>iptables -F\nsetenforce 0\nyum -y install gcc perl\nyum -y install pcre-devel openssl-devel\nyum -y install ntp\nntpdate time1.aliyun.com\n</code></pre><h3 id=\"71配置\"><a href=\"#71配置\" class=\"headerlink\" title=\"71配置\"></a>71配置</h3><pre><code>git clone https://github.com/happyfish100/fastdfs.git\ngit clone https://github.com/happyfish100/libfastcommon.git\n</code></pre><p>分别cd进去./make.sh &amp;&amp; ./make install<br>复制配置文件至指定目录</p>\n<pre><code>cd /root/fastdfs/conf\ncp {http.conf,mime.types，anti-steal.jpg} /etc/fdfs/\n</code></pre><p>准备配置文件</p>\n<pre><code>cd /etc/fdfs\ncp tracker.conf.sample tracker.conf\n[root@71 fdfs]# cat tracker.conf |grep -v &#39;^#&#39;|grep -v &quot;^$&quot;\ndisabled=false\nbind_addr=\nport=22122\nconnect_timeout=30\nnetwork_timeout=60\nbase_path=/fastdfs        #程序目录，需手动创建\nmax_connections=256\naccept_threads=1\nwork_threads=4\nmin_buff_size = 8KB\nmax_buff_size = 128KB\nstore_lookup=0            #这里0表示轮询下面两个组\nstore_group=group0\nstore_group=group1\nstore_server=0\nstore_path=0\ndownload_server=0\nreserved_storage_space = 10%\nlog_level=info\nrun_by_group=\nrun_by_user=\nallow_hosts=*\nsync_log_buff_interval = 10\ncheck_active_interval = 120\nthread_stack_size = 64KB\nstorage_ip_changed_auto_adjust = true\nstorage_sync_file_max_delay = 86400\nstorage_sync_file_max_time = 300\nuse_trunk_file = false \nslot_min_size = 256\nslot_max_size = 16MB\ntrunk_file_size = 64MB\ntrunk_create_file_advance = false\ntrunk_create_file_time_base = 02:00\ntrunk_create_file_interval = 86400\ntrunk_create_file_space_threshold = 20G\ntrunk_init_check_occupying = false\ntrunk_init_reload_from_binlog = false\ntrunk_compress_binlog_min_interval = 0\nuse_storage_id = false\nstorage_ids_filename = storage_ids.conf\nid_type_in_filename = ip\nstore_slave_file_use_link = false\nrotate_error_log = false\nerror_log_rotate_time=00:00\nrotate_error_log_size = 0\nlog_file_keep_days = 0\nuse_connection_pool = false\nconnection_pool_max_idle_time = 3600\nhttp.server_port=80\nhttp.check_alive_interval=30\nhttp.check_alive_type=tcp\nhttp.check_alive_uri=/status.html\n</code></pre><p>安装完成后会自动创建unit file,所以<br>service fdfs_trackerd start</p>\n<p>nginx配置</p>\n<pre><code>yum -y Install nginx\n在nginx.conf server配置段中加入\n    upstream fastdfs0 {\n        server 172.18.50.72;\n        server 172.18.50.73;\n    }\n\n    upstream fastdfs1 {\n        server 172.18.50.62;\n        server 172.18.50.63;\n    }\ndefault.conf中加入\n    location /group0/M00 {\n        proxy_pass http://fastdfs0;\n    }\n    location /group1/M00 {\n        proxy_pass http://fastdfs1;\n    }\n</code></pre><p>###72配置</p>\n<pre><code>git clone https://github.com/happyfish100/fastdfs.git\ngit clone https://github.com/happyfish100/libfastcommon.git\n</code></pre><p>分别cd进去./make.sh &amp;&amp; ./make install<br>复制配置文件至指定目录</p>\n<pre><code>cd /root/fastdfs/conf\ncp {http.conf,mime.types，anti-steal.jpg} /etc/fdfs/\n</code></pre><p>####准备配置文件</p>\n<pre><code>mkdir -pv /data/fastdfs\ncd /etc/fdfs/\ncp storage.conf.sample storage.conf\n[root@72 fdfs]# cat /etc/fdfs/storage.conf|grep -Ev &quot;^(#|$)&quot;\ndisabled=false\ngroup_name=group0            #组名\nbind_addr=\nclient_bind=true\nport=23000\nconnect_timeout=30\nnetwork_timeout=60\nheart_beat_interval=30\nstat_report_interval=60\nbase_path=/data/fastdfs\nmax_connections=256\nbuff_size = 256KB\naccept_threads=1\nwork_threads=4\ndisk_rw_separated = true\ndisk_reader_threads = 1\ndisk_writer_threads = 1\nsync_wait_msec=50\nsync_interval=0\nsync_start_time=00:00\nsync_end_time=23:59\nwrite_mark_file_freq=500\nstore_path_count=1\nstore_path0=/data/fastdfs            #数据存放目录\nsubdir_count_per_path=256\ntracker_server=172.18.50.71:22122    #tracker节点\nlog_level=info\nrun_by_group=\nrun_by_user=\nallow_hosts=*\nfile_distribute_path_mode=0\nfile_distribute_rotate_count=100\nfsync_after_written_bytes=0\nsync_log_buff_interval=10\nsync_binlog_buff_interval=10\nsync_stat_file_interval=300\nthread_stack_size=512KB\nupload_priority=10\nif_alias_prefix=\ncheck_file_duplicate=0\nfile_signature_method=hash\nkey_namespace=FastDFS\nkeep_alive=0\nuse_access_log = false\nrotate_access_log = false\naccess_log_rotate_time=00:00\nrotate_error_log = false\nerror_log_rotate_time=00:00\nrotate_access_log_size = 0\nrotate_error_log_size = 0\nlog_file_keep_days = 0\nfile_sync_skip_invalid_record=false\nuse_connection_pool = false\nconnection_pool_max_idle_time = 3600\nhttp.domain_name=\nhttp.server_port=80                ##http端口\n</code></pre><p>启动服务<br>service fdfs_storaged start</p>\n<p>####安装nginx进行反代<br>git clone <a href=\"https://github.com/happyfish100/fastdfs-nginx-module.git\" target=\"_blank\" rel=\"noopener\">https://github.com/happyfish100/fastdfs-nginx-module.git</a><br>准备nginx源码包，我这里使用1.10.3版本</p>\n<pre><code>tar xvf nginx-1.10.3.tar.gz\ncd nginx-1.10.3\n./configure   --prefix=/usr   \\\n--sbin-path=/usr/sbin/nginx   \\\n--conf-path=/etc/nginx/nginx.conf   \\\n--error-log-path=/var/log/nginx/error.log   \\\n--http-log-path=/var/log/nginx/access.log   \\\n--pid-path=/var/run/nginx/nginx.pid    \\\n--lock-path=/var/lock/nginx.lock   \\\n--user=nginx   \\\n--group=nginx   \\\n--with-http_ssl_module   \\\n--with-http_flv_module  \\\n--with-http_stub_status_module   \\\n--with-http_gzip_static_module   \\\n--http-client-body-temp-path=/var/tmp/nginx/client/   \\\n--http-proxy-temp-path=/var/tmp/nginx/proxy/   \\\n--http-fastcgi-temp-path=/var/tmp/nginx/fcgi/   \\\n--http-uwsgi-temp-path=/var/tmp/nginx/uwsgi   \\\n--http-scgi-temp-path=/var/tmp/nginx/scgi   \\\n--with-pcre   \\\n--with-debug   \\\n--add-module=../fastdfs-nginx-module/src\nmake &amp;&amp; make install\n</code></pre><p>修改配置文件，在nginx配置文件中加入</p>\n<pre><code>location /M00 {\n      root /data/fastdfs/data;\n      ngx_fastdfs_module;\n}\n</code></pre><p>添加unit file</p>\n<pre><code>vim /etc/init.d/nginx\n[root@72 fdfs]# cat /etc/init.d/nginx \n#!/bin/sh\n#\n# nginx - this script starts and stops the nginx daemon\n#\n# chkconfig:   - 85 15 \n# description:  Nginx is an HTTP(S) server, HTTP(S) reverse \\\n#               proxy and IMAP/POP3 proxy server\n# processname: nginx\n# config:      /etc/nginx/nginx.conf\n# config:      /etc/sysconfig/nginx\n# pidfile:     /var/run/nginx.pid\n\n# Source function library.\n. /etc/rc.d/init.d/functions\n\n# Source networking configuration.\n. /etc/sysconfig/network\n\n# Check that networking is up.\n[ &quot;$NETWORKING&quot; = &quot;no&quot; ] &amp;&amp; exit 0\n\nnginx=&quot;/usr/sbin/nginx&quot;\nprog=$(basename $nginx)\n\nNGINX_CONF_FILE=&quot;/etc/nginx/nginx.conf&quot;\n\n[ -f /etc/sysconfig/nginx ] &amp;&amp; . /etc/sysconfig/nginx\n\nlockfile=/var/lock/subsys/nginx\n\nmake_dirs() {\n   # make required directories\n   user=`nginx -V 2&gt;&amp;1 | grep &quot;configure arguments:&quot; | sed &#39;s/[^*]*--user=\\([^ ]*\\).*/\\1/g&#39; -`\n   options=`$nginx -V 2&gt;&amp;1 | grep &#39;configure arguments:&#39;`\n   for opt in $options; do\n       if [ `echo $opt | grep &#39;.*-temp-path&#39;` ]; then\n           value=`echo $opt | cut -d &quot;=&quot; -f 2`\n           if [ ! -d &quot;$value&quot; ]; then\n               # echo &quot;creating&quot; $value\n               mkdir -p $value &amp;&amp; chown -R $user $value\n           fi\n       fi\n   done\n}\n\nstart() {\n    [ -x $nginx ] || exit 5\n    [ -f $NGINX_CONF_FILE ] || exit 6\n    make_dirs\n    echo -n $&quot;Starting $prog: &quot;\n    daemon $nginx -c $NGINX_CONF_FILE\n    retval=$?\n    echo\n    [ $retval -eq 0 ] &amp;&amp; touch $lockfile\n    return $retval\n}\n\nstop() {\n    echo -n $&quot;Stopping $prog: &quot;\n    killproc $prog -QUIT\n    retval=$?\n    echo\n    [ $retval -eq 0 ] &amp;&amp; rm -f $lockfile\n    return $retval\n}\n\nrestart() {\n    configtest || return $?\n    stop\n    sleep 1\n    start\n}\n\nreload() {\n    configtest || return $?\n    echo -n $&quot;Reloading $prog: &quot;\n    killproc $nginx -HUP\n    RETVAL=$?\n    echo\n}\n\nforce_reload() {\n    restart\n}\n\nconfigtest() {\n  $nginx -t -c $NGINX_CONF_FILE\n}\n\nrh_status() {\n    status $prog\n}\n\nrh_status_q() {\n    rh_status &gt;/dev/null 2&gt;&amp;1\n}\n\ncase &quot;$1&quot; in\n    start)\n        rh_status_q &amp;&amp; exit 0\n        $1\n        ;;\n    stop)\n        rh_status_q || exit 0\n        $1\n        ;;\n    restart|configtest)\n        $1\n        ;;\n    reload)\n        rh_status_q || exit 7\n        $1\n        ;;\n    force-reload)\n        force_reload\n        ;;\n    status)\n        rh_status\n        ;;\n    condrestart|try-restart)\n        rh_status_q || exit 0\n            ;;\n    *)\n        echo $&quot;Usage: $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload|configtest}&quot;\n        exit 2\nesac\n</code></pre><p>将fastdnf配置文件复制到/etc/fdfs</p>\n<pre><code>cd /root/fastdfs-nginx-module/src\ncp mod_fastdfs.conf /etc/fdfs\n</code></pre><p>配置如下</p>\n<pre><code>[root@72 fdfs]# cat mod_fastdfs.conf | grep -Ev &quot;^(#|$)&quot;\nconnect_timeout=2\nnetwork_timeout=30\nbase_path=/data/fastdfs/logs            #日志文件存放位置\nload_fdfs_parameters_from_tracker=true\nstorage_sync_file_max_delay = 86400\nuse_storage_id = false\nstorage_ids_filename = storage_ids.conf\ntracker_server=172.18.50.71:22122        #tracker服务器地址\nstorage_server_port=23000\ngroup_name=group0                        #组名\nurl_have_group_name = true                #多组需开启，在url显示组名\nstore_path_count=1\nstore_path0=/data/fastdfs                #data目录\nlog_level=info\nlog_filename=\nresponse_mode=proxy\nif_alias_prefix=\nflv_support = true\nflv_extension = flv\ngroup_count = 0\n</code></pre><p>添加nginx用户</p>\n<pre><code>useradd -r nginx -s /sbin/nologin\n</code></pre><p>然后就可以启动服务了<br>创建链接文件<br>ln -s /data/fastdfs/data  /data/fastdfs/data/M00<br>然后重启nginx</p>\n<p>另外3台的配置除组名外基本一致，这里就不写了</p>\n<p>###测试<br>准备client<br>安装fastdfs<br>准备配置文件</p>\n<pre><code>[root@71 ~]# cat  /etc/fdfs/client.conf.sample |grep -Ev &quot;^(#|$)&quot;\nconnect_timeout=30\nnetwork_timeout=60\nbase_path=/data/\ntracker_server=172.18.50.71:22122\nlog_level=info\nuse_connection_pool = false\nconnection_pool_max_idle_time = 3600\nload_fdfs_parameters_from_tracker=false\nuse_storage_id = false\nstorage_ids_filename = storage_ids.conf\nhttp.tracker_server_port=80\n</code></pre><p>上传文件</p>\n<pre><code>[root@71 ~]# fdfs_upload_file /etc/fdfs/client.conf.sample a.txt \ngroup0/M00/00/00/rBIySFk-i8iAXDN7AAAEXxgxbAk905.txt\n[root@71 ~]# fdfs_upload_file /etc/fdfs/client.conf.sample a.txt \ngroup1/M00/00/00/rBIyP1k-i8iAUolVAAAEXxgxbAk832.txt\n</code></pre><p>访问测试</p>\n<pre><code>curl http://172.18.50.71/group1/M00/00/00/rBIyP1k-i8iAUolVAAAEXxgxbAk832.txt\nroot:x:0:0:root:/root:/bin/bash\nbin:x:1:1:bin:/bin:/sbin/nologin\ndaemon:x:2:2:daemon:/sbin:/sbin/nologin\nadm:x:3:4:adm:/var/adm:/sbin/nologin\nlp:x:4:7:lp:/var/spool/lpd:/sbin/nologin\nsync:x:5:0:sync:/sbin:/bin/sync\nshutdown:x:6:0:shutdown:/sbin:/sbin/shutdown\nhalt:x:7:0:halt:/sbin:/sbin/halt\nmail:x:8:12:mail:/var/spool/mail:/sbin/nologin\noperator:x:11:0:operator:/root:/sbin/nologin\ngames:x:12:100:games:/usr/games:/sbin/nologin\nftp:x:14:50:FTP User:/var/ftp:/sbin/nologin\nnobody:x:99:99:Nobody:/:/sbin/nologin\nsystemd-bus-proxy:x:999:997:systemd Bus Proxy:/:/sbin/nologin\nsystemd-network:x:192:192:systemd Network Management:/:/sbin/nologin\ndbus:x:81:81:System message bus:/:/sbin/nologin\npolkitd:x:998:996:User for polkitd:/:/sbin/nologin\ntss:x:59:59:Account used by the trousers package to sandbox the tcsd daemon:/dev/null:/sbin/nologin\npostfix:x:89:89::/var/spool/postfix:/sbin/nologin\nsshd:x:74:74:Privilege-separated SSH:/var/empty/sshd:/sbin/nologin\nchrony:x:997:995::/var/lib/chrony:/sbin/nologin\napache:x:48:48:Apache:/usr/share/httpd:/sbin/nologin\nnginx:x:996:994:nginx user:/var/cache/nginx:/sbin/nologin\n</code></pre><pre><code>curl http://172.18.50.71/group0/M00/00/00/rBIySFk-i8iAXDN7AAAEXxgxbAk905.txt\ncurl http://172.18.50.71/group1/M00/00/00/rBIyP1k-i8iAUolVAAAEXxgxbAk832.txt\nroot:x:0:0:root:/root:/bin/bash\nbin:x:1:1:bin:/bin:/sbin/nologin\ndaemon:x:2:2:daemon:/sbin:/sbin/nologin\nadm:x:3:4:adm:/var/adm:/sbin/nologin\nlp:x:4:7:lp:/var/spool/lpd:/sbin/nologin\nsync:x:5:0:sync:/sbin:/bin/sync\nshutdown:x:6:0:shutdown:/sbin:/sbin/shutdown\nhalt:x:7:0:halt:/sbin:/sbin/halt\nmail:x:8:12:mail:/var/spool/mail:/sbin/nologin\noperator:x:11:0:operator:/root:/sbin/nologin\ngames:x:12:100:games:/usr/games:/sbin/nologin\nftp:x:14:50:FTP User:/var/ftp:/sbin/nologin\nnobody:x:99:99:Nobody:/:/sbin/nologin\nsystemd-bus-proxy:x:999:997:systemd Bus Proxy:/:/sbin/nologin\nsystemd-network:x:192:192:systemd Network Management:/:/sbin/nologin\ndbus:x:81:81:System message bus:/:/sbin/nologin\npolkitd:x:998:996:User for polkitd:/:/sbin/nologin\ntss:x:59:59:Account used by the trousers package to sandbox the tcsd daemon:/dev/null:/sbin/nologin\npostfix:x:89:89::/var/spool/postfix:/sbin/nologin\nsshd:x:74:74:Privilege-separated SSH:/var/empty/sshd:/sbin/nologin\nchrony:x:997:995::/var/lib/chrony:/sbin/nologin\napache:x:48:48:Apache:/usr/share/httpd:/sbin/nologin\nnginx:x:996:994:nginx user:/var/cache/nginx:/sbin/nologin\n</code></pre><h3 id=\"一些注意的地方\"><a href=\"#一些注意的地方\" class=\"headerlink\" title=\"一些注意的地方\"></a>一些注意的地方</h3><p>72 73两台centos7.3在修改/etc/fdfs/mod_fastdfs.conf<br>url_have_group_name = true后配置nginx反代<br>location /group0/M00 {<br>            root /data/fastdfs/data;<br>            ngx_fastdfs_module;<br>        }<br> 后无法访问<br> 需要在数据存放目录建立一个group0的软连接，而62 、63的cent6.8则一切正常。</p>\n","categories":[],"tags":[{"name":"分布式文件系统","path":"api/tags/分布式文件系统.json"},{"name":"Fastdfs","path":"api/tags/Fastdfs.json"}]}