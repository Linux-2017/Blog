{"title":"Tomcat session共享","slug":"Tomcat session共享","date":"2017-05-25T07:30:49.000Z","updated":"2017-11-19T13:15:37.000Z","comments":true,"excerpt":"","content":"<h2 id=\"Tomcat-session共享\"><a href=\"#Tomcat-session共享\" class=\"headerlink\" title=\"Tomcat session共享\"></a>Tomcat session共享</h2><p>通过memcached-session-manager实现，项目地址<a href=\"https://github.com/magro/memcached-session-manager，实验拓扑如下：\" target=\"_blank\" rel=\"noopener\">https://github.com/magro/memcached-session-manager，实验拓扑如下：</a><br><img src=\"http://omsab2via.bkt.clouddn.com/session.png\" alt=\"enter image description here\"></p>\n<h3 id=\"50-71\"><a href=\"#50-71\" class=\"headerlink\" title=\"50.71\"></a>50.71</h3><p>安装配置ansible</p>\n<pre><code>yum -y install ansible\n\nvim /etc/ansible/hosts\n#加入\n[tcs]\n172.18.50.72\n172.18.50.73\n[mems]\n172.18.50.61\n172.18.50.62\n#生成key并copy至tcs及mems\nssh-keygen \nssh-copy-id root@172.18.50.72\nssh-copy-id root@172.18.50.73\nssh-copy-id root@172.18.50.61\nssh-copy-id root@172.18.50.62\nansible all -m ping\n</code></pre><p>关闭防火墙及selink</p>\n<pre><code>[root@71 ansible]# ansible all -m shell -a &#39;iptables -F;setenforce 0&#39;\n172.18.50.61 | SUCCESS | rc=0 &gt;&gt;\n\n\n172.18.50.72 | SUCCESS | rc=0 &gt;&gt;\n\n\n172.18.50.73 | SUCCESS | rc=0 &gt;&gt;\n\n\n172.18.50.62 | SUCCESS | rc=0 &gt;&gt;\n</code></pre><p><strong>同步时间</strong></p>\n<pre><code> cat /etc/ansible/ntp.yml \n\n- hosts: all\n  remote_user: root\n  tasks:\n  - name: install ntp\n    yum: name=ntp state=latest\n  - name: sync time\n    shell: ntpdate ntp1.aliyun.com\n\n[root@71 ~]# ansible-playbook /etc/ansible/ntp.yml\n#查看是否同步\n[root@71 ~]# ansible all -m shell -a &#39;date&#39;\n172.18.50.61 | SUCCESS | rc=0 &gt;&gt;\nThu May 25 10:49:24 CST 2017\n\n172.18.50.62 | SUCCESS | rc=0 &gt;&gt;\nThu May 25 10:49:25 CST 2017\n\n172.18.50.73 | SUCCESS | rc=0 &gt;&gt;\nThu May 25 10:49:25 CST 2017\n\n172.18.50.72 | SUCCESS | rc=0 &gt;&gt;\nThu May 25 10:49:25 CST 2017\n</code></pre><p><strong>安装tomcat</strong></p>\n<pre><code>[root@71 ansible]# cat tomcat.yml \n---\n\n- hosts: tcs\n  remote_user: root\n  tasks:\n  - name: install tomcat\n    yum: name=tomcat,tomcat-webapps  state=latest\n  - name: start tomcat\n    service: name=tomcat state=started\n[root@71 ansible]# ansible-playbook tomcat.yml\n</code></pre><p><strong>安装memcached</strong></p>\n<pre><code>[root@71 ~]# cat /etc/ansible/mems.yml \n---\n\n- hosts: mems\n  remote_user: root\n  tasks:\n  - name: install memcached\n    yum: name=memcached state=latest\n  - name: start memcached\n    service: name=memcached state=started\n[root@71 ~]# ansible-playbook /etc/ansible/mems.yml\n</code></pre><p>安装httpd并实现负载均衡</p>\n<pre><code>yum -y install httpd\n#在conf/httpd.conf中插入\n&lt;Proxy balancer://tomcat&gt;\n    BalancerMember  http://172.18.50.72:8080 loadfactor=1\n    BalancerMember  http://172.18.50.73:8080 loadfactor=1\n    ProxySet  lbmethod=byrequests\n&lt;/Proxy&gt;\nProxyVia Off\nProxyRequests Off\nProxyPass / balancer://tomcat/\nProxyPassReverse / balancer://tomcat/\n&lt;Proxy *&gt;\n    Order Allow,Deny\n    Allow From all\n&lt;/Proxy&gt;\n&lt;Location /&gt;\n    Order Allow,Deny\n    Allow From all\n&lt;/Location&gt;\n</code></pre><h4 id=\"安装配置-memcached-session-manager\"><a href=\"#安装配置-memcached-session-manager\" class=\"headerlink\" title=\"安装配置 memcached-session-manager\"></a>安装配置 memcached-session-manager</h4><ul>\n<li>下载jar文件<pre><code>下载如下jar文件至各tomcat节点的tomcat安装目录下的lib目录中，其中的${version}要换成你所需要的版本号，tc${6,7,8}要换成与tomcat版本相同的版本号。\n  memcached-session-manager-${version}.jar\n  memcached-session-manager-tc${6,7,8}-${version}.jar\n  spymemcached-${version}.jar\n  msm-javolution-serializer-${version}.jar\n  javolution-${version}.jar\n</code></pre></li>\n<li>使用ansible推送至tcs<br>```<br>[root@71 ~]# ls<br>anaconda-ks.cfg  javolution-5.4.3.1.jar               memcached-session-manager-tc7-1.8.3.jar  spymemcached-2.11.1.jar<br>copy_jar.yml     memcached-session-manager-1.8.3.jar  msm-javolution-serializer-1.8.3.jar<br>[root@71 ~]# cat copy_jar.yml </li>\n</ul>\n<hr>\n<ul>\n<li>hosts: tcs<br>remote_user: root<br>tasks:<ul>\n<li>name: copy jar to tcs<br>copy: src=~/ dest=/usr/share/tomcat/lib<br>with_items:<ul>\n<li>“memcached-session-manager-tc7-1.8.3.jar”</li>\n<li>“javolution-5.4.3.1.jar”</li>\n<li>“memcached-session-manager-1.8.3.jar”</li>\n<li>“spymemcached-2.11.1.jar”</li>\n<li>“msm-javolution-serializer-1.8.3.jar”</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<pre><code>**配置tomcat1**\ntomcat2配置与1除测试页外一致\n</code></pre><p>mkdir -pv /usr/share/tomcat/webapps/test/{classes,lib,WEB-INF}<br>cat /usr/share/tomcat/test/webapps/test/index.jsp<br>&lt;%@ page language=”java” %&gt;</p>\n<p><html><br>  <head><title>TomcatB</title></head><br>  <body><br>    <h1><font color=\"blue\">TomcatB</font></h1><br>    <table align=\"centre\" border=\"1\"><br>      <tr><br>        <td>Session ID</td><br>    &lt;% session.setAttribute(“test.com”,”test.com”); %&gt;<br>        <td>&lt;%= session.getId() %&gt;</td><br>      </tr><br>      <tr><br>        <td>Created on</td><br>        <td>&lt;%= session.getCreationTime() %&gt;</td><br>     </tr><br>    </table><br>  </body><br></html><br>[root@73 test]# cat /etc/tomcat/server.xml<br>&lt;?xml version=’1.0’ encoding=’utf-8’?&gt;<br>&lt;!–<br>  Licensed to the Apache Software Foundation (ASF) under one or more<br>  contributor license agreements.  See the NOTICE file distributed with<br>  this work for additional information regarding copyright ownership.<br>  The ASF licenses this file to You under the Apache License, Version 2.0<br>  (the “License”); you may not use this file except in compliance with<br>  the License.  You may obtain a copy of the License at</p>\n<pre><code>  http://www.apache.org/licenses/LICENSE-2.0\n</code></pre><p>  Unless required by applicable law or agreed to in writing, software<br>  distributed under the License is distributed on an “AS IS” BASIS,<br>  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br>  See the License for the specific language governing permissions and<br>  limitations under the License.<br>–&gt;<br><!-- Note:  A \"Server\" is not itself a \"Container\", so you may not\n     define subcomponents such as \"Valves\" at this level.\n     Documentation at /docs/config/server.html\n --></p>\n<server port=\"8005\" shutdown=\"SHUTDOWN\"><br>  <listener classname=\"org.apache.catalina.startup.VersionLoggerListener\"><br>  <!-- Security listener. Documentation at /docs/config/listeners.html\n  <Listener className=\"org.apache.catalina.security.SecurityListener\" />\n  --><br>  <!--APR library loader. Documentation at /docs/apr.html --><br>  <listener classname=\"org.apache.catalina.core.AprLifecycleListener\" sslengine=\"on\"><br>  <!--Initialize Jasper prior to webapps are loaded. Documentation at /docs/jasper-howto.html --><br>  <listener classname=\"org.apache.catalina.core.JasperListener\"><br>  <!-- Prevent memory leaks due to use of particular java/javax APIs--><br>  <listener classname=\"org.apache.catalina.core.JreMemoryLeakPreventionListener\"><br>  <listener classname=\"org.apache.catalina.mbeans.GlobalResourcesLifecycleListener\"><br>  <listener classname=\"org.apache.catalina.core.ThreadLocalLeakPreventionListener\"><br><br>  <!-- Global JNDI resources\n       Documentation at /docs/jndi-resources-howto.html\n  --><br>  <globalnamingresources><br>    <!-- Editable user database that can also be used by\n         UserDatabaseRealm to authenticate users\n    --><br>    <resource name=\"UserDatabase\" auth=\"Container\" type=\"org.apache.catalina.UserDatabase\" description=\"User database that can be updated and saved\" factory=\"org.apache.catalina.users.MemoryUserDatabaseFactory\" pathname=\"conf/tomcat-users.xml\"><br>  </resource></globalnamingresources><br><br>  <!-- A \"Service\" is a collection of one or more \"Connectors\" that share\n       a single \"Container\" Note:  A \"Service\" is not itself a \"Container\",\n       so you may not define subcomponents such as \"Valves\" at this level.\n       Documentation at /docs/config/service.html\n   --><br>  <service name=\"Catalina\"><br><br>    <!--The connectors can use a shared executor, you can define one or more named thread pools--><br>    <!--\n    <Executor name=\"tomcatThreadPool\" namePrefix=\"catalina-exec-\"\n        maxThreads=\"150\" minSpareThreads=\"4\"/>\n    --><br><br><br>    <!-- A \"Connector\" represents an endpoint by which requests are received\n         and responses are returned. Documentation at :\n         Java HTTP Connector: /docs/config/http.html (blocking & non-blocking)\n         Java AJP  Connector: /docs/config/ajp.html\n         APR (HTTP/AJP) Connector: /docs/apr.html\n         Define a non-SSL HTTP/1.1 Connector on port 8080\n    --><br>    <connector port=\"8080\" protocol=\"HTTP/1.1\" connectiontimeout=\"20000\" redirectport=\"8443\"><br>    <!-- A \"Connector\" using the shared thread pool--><br>    <!--\n    <Connector executor=\"tomcatThreadPool\"\n               port=\"8080\" protocol=\"HTTP/1.1\"\n               connectionTimeout=\"20000\"\n               redirectPort=\"8443\" />\n    --><br>    <!-- Define a SSL HTTP/1.1 Connector on port 8443\n         This connector uses the BIO implementation that requires the JSSE\n         style configuration. When using the APR/native implementation, the\n         OpenSSL style configuration is required as described in the APR/native\n         documentation --><br>    <!--\n    <Connector port=\"8443\" protocol=\"org.apache.coyote.http11.Http11Protocol\"\n               maxThreads=\"150\" SSLEnabled=\"true\" scheme=\"https\" secure=\"true\"\n               clientAuth=\"false\" sslProtocol=\"TLS\" />\n    --><br><br>    <!-- Define an AJP 1.3 Connector on port 8009 --><br>    <connector port=\"8009\" protocol=\"AJP/1.3\" redirectport=\"8443\"><br><br><br>    <!-- An Engine represents the entry point (within Catalina) that processes\n         every request.  The Engine implementation for Tomcat stand alone\n         analyzes the HTTP headers included with the request, and passes them\n         on to the appropriate Host (virtual host).\n         Documentation at /docs/config/engine.html --><br><br>    <!-- You should set jvmRoute to support load-balancing via AJP ie :\n    <Engine name=\"Catalina\" defaultHost=\"localhost\" jvmRoute=\"jvm1\">\n    --><br>    <engine name=\"Catalina\" defaulthost=\"localhost\"><br><br>      <!--For clustering, please take a look at documentation at:\n          /docs/cluster-howto.html  (simple how to)\n          /docs/config/cluster.html (reference documentation) --><br>      <!--\n      <Cluster className=\"org.apache.catalina.ha.tcp.SimpleTcpCluster\"/>\n      --><br><br>      <!-- Use the LockOutRealm to prevent attempts to guess user passwords\n           via a brute-force attack --><br>      <realm classname=\"org.apache.catalina.realm.LockOutRealm\"><br>        <!-- This Realm uses the UserDatabase configured in the global JNDI\n             resources under the key \"UserDatabase\".  Any edits\n             that are performed against this UserDatabase are immediately\n             available for use by the Realm.  --><br>        <realm classname=\"org.apache.catalina.realm.UserDatabaseRealm\" resourcename=\"UserDatabase\"><br>      </realm><br><br>      <host name=\"localhost\" appbase=\"webapps\" unpackwars=\"true\" autodeploy=\"true\"><br><br>        <!-- SingleSignOn valve, share authentication between web applications\n             Documentation at: /docs/config/valve.html --><br>        <!--\n        <Valve className=\"org.apache.catalina.authenticator.SingleSignOn\" />\n        --><br><br>        <!-- Access log processes all example.\n             Documentation at: /docs/config/valve.html\n             Note: The pattern used is equivalent to using pattern=\"common\" --><br>        <valve classname=\"org.apache.catalina.valves.AccessLogValve\" directory=\"logs\" prefix=\"localhost_access_log.\" suffix=\".txt\" pattern=\"%h %l %u %t &quot;%r&quot; %s %b\"><br>        <context path=\"/test\" docbase=\"/usr/share/tomcat/webapps/test\" reloadable=\"true\"><br>              <manager classname=\"de.javakaffee.web.msm.MemcachedBackupSessionManager\" memcachednodes=\"n1:172.18.50.61:11211,n2:172.18.50.62:11211\" failovernodes=\"n1\" requesturiignorepattern=\".*\\.(ico|png|gif|jpg|css|js)$\" transcoderfactoryclass=\"de.javakaffee.web.msm.serializer.javolution.JavolutionTranscoderFactory\"><br>        </manager></context><br>      </valve></host><br>    </realm></engine><br>  </connector></connector></service><br></listener></listener></listener></listener></listener></listener></server>\n\n<p>```<br><strong>测试</strong></p>\n<blockquote>\n<p><a href=\"http://172.18.50.71\" target=\"_blank\" rel=\"noopener\">http://172.18.50.71</a><br>TomcatA<br>Session ID<br>3F96F6A4657D50881AC523F6A7AF787F-n2<br>Created on<br>1495693301965<br>刷新后为<br>TomcatB<br>Session ID<br>3F96F6A4657D50881AC523F6A7AF787F-n2<br>Created on<br>1495693301965<br>stop n2后为 n1</p>\n</blockquote>\n","categories":[{"name":"Tomcat","path":"api/categories/Tomcat.json"}],"tags":[{"name":"session","path":"api/tags/session.json"}]}