{"title":"ca","slug":"ca","date":"2017-04-11T12:40:55.000Z","updated":"2017-11-19T13:15:37.000Z","comments":true,"excerpt":"","content":"<h1 id=\"创建ca\"><a href=\"#创建ca\" class=\"headerlink\" title=\"创建ca\"></a>创建ca</h1><h4 id=\"server端\"><a href=\"#server端\" class=\"headerlink\" title=\"server端\"></a>server端</h4><ul>\n<li>生成私钥</li>\n</ul>\n\n    <pre><code class=\"lang-shell\">(umask <span class=\"hljs-number\">066</span>;openssl genrsa -out <span class=\"hljs-regexp\">/etc/</span>pki<span class=\"hljs-regexp\">/CA/</span><span class=\"hljs-keyword\">private</span>/cakey.pem <span class=\"hljs-number\">4096</span>)\n</code></pre>\n<ul>\n<li>自颁发证书</li>\n</ul>\n\n    <pre><code class=\"lang-shell\">cd /etc/pki/CA\nopenssl req -new -x509 -key private/cakey<span class=\"hljs-selector-class\">.pem</span> -out cacert<span class=\"hljs-selector-class\">.pem</span> -days <span class=\"hljs-number\">99999</span>\n</code></pre>\n<ul>\n<li>创建后面需要用到的文件<ul>\n<li>touch /etc/pki/CA/index.txt</li>\n<li>echo 01 &gt; /etc/pki/CA/serial</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"client端\"><a href=\"#client端\" class=\"headerlink\" title=\"client端\"></a>client端</h4><ul>\n<li>生成私钥</li>\n</ul>\n\n    <pre><code class=\"lang-shell\">(umask <span class=\"hljs-number\">077</span>;openssl genrsa -out <span class=\"hljs-regexp\">/etc/</span>pki<span class=\"hljs-regexp\">/tls/</span><span class=\"hljs-keyword\">private</span>/test.key <span class=\"hljs-number\">1024</span>)\n</code></pre>\n<ul>\n<li>生成申请文件</li>\n</ul>\n\n    <pre><code class=\"lang-shell\">cd <span class=\"hljs-regexp\">/etc/</span>pki<span class=\"hljs-regexp\">/tls/</span><span class=\"hljs-keyword\">private</span>\nopenssl req -<span class=\"hljs-keyword\">new</span> -key test.key -out <span class=\"hljs-regexp\">/etc/</span>pki<span class=\"hljs-regexp\">/tls/</span>test.csr -days <span class=\"hljs-number\">365</span>\n</code></pre>\n<h4 id=\"颁发证书\"><a href=\"#颁发证书\" class=\"headerlink\" title=\"颁发证书\"></a>颁发证书</h4><ul>\n<li>将client端申请文件scp至ca端</li>\n</ul>\n<pre><code>scp /etc/pki/tls/test.csr root@ca_ip:~\n</code></pre><ul>\n<li>颁发</li>\n</ul>\n\n    <pre><code class=\"lang-shell\">opensl <span class=\"hljs-keyword\">ca</span> -<span class=\"hljs-keyword\">in</span> <span class=\"hljs-keyword\">test</span>.csr -<span class=\"hljs-keyword\">out</span> /etc/pki/<span class=\"hljs-keyword\">CA</span>/certs/<span class=\"hljs-keyword\">test</span>.crt -days 365\n</code></pre>\n<ul>\n<li>然后将test.crt –&gt;client</li>\n</ul>\n<p><strong>注意</strong> ： 默认国家、省、公司名称三项必须和CA一致</p>\n<h4 id=\"吊销证书\"><a href=\"#吊销证书\" class=\"headerlink\" title=\"吊销证书\"></a>吊销证书</h4><ul>\n<li><p>echo 01 &gt; /etc/pki/CA/crlumber  首次生成吊销列表需要创建此文件</p>\n<ul>\n<li>openssl ca -revoke newcerts/01.pem</li>\n<li>openssl ca -gencrl -out crl /cr2.pem</li>\n</ul>\n</li>\n<li><p>查看是否吊销</p>\n<ul>\n<li><p>openssl crl -in crl/cr1.pem -noout -text</p>\n</li>\n<li><p>复制crl/cr1.pem到windows,改后缀为crl查看是否成功</p>\n<p>​</p>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"一些用到的命令\"><a href=\"#一些用到的命令\" class=\"headerlink\" title=\"一些用到的命令\"></a>一些用到的命令</h4><ul>\n<li><p>openssl  req -new -x509 -key  cakey.pem -days 9999 -out cacert.pem</p>\n<ul>\n<li>-new 生成新证书签署请求</li>\n<li>-x509 专用于CA生成自签证书</li>\n<li>-key 生成请求时用到的私钥文件</li>\n<li>-days n 证书的有效期限，单位为天</li>\n<li>-out /path/filename 证书的保存路径</li>\n</ul>\n</li>\n<li><p>查看证书的信息</p>\n<pre><code>openssl x509 -in /path/证书 -noout -text|issuer|subject|serial|dates\n</code></pre></li>\n<li><p>查看指定编号的证书状态</p>\n<pre><code>openssl ca -status SERIAL\n</code></pre></li>\n</ul>\n<p>一个搭建ca环境的脚本</p>\n<p>ca_server.sh</p>\n\n    <pre><code class=\"lang-shell\"><span class=\"hljs-meta\">#!/bin/bash</span>\n<span class=\"hljs-built_in\">read</span> -p <span class=\"hljs-string\">\"Please enter the certificate is valid(The unit is day):\"</span> c_time\n<span class=\"hljs-built_in\">read</span> -p <span class=\"hljs-string\">\"Country Name (2 letter code) [XX]:\"</span> c_name\n<span class=\"hljs-built_in\">read</span> -p <span class=\"hljs-string\">\"State or Province Name (full name) []:\"</span> p_name\n<span class=\"hljs-built_in\">read</span> -p <span class=\"hljs-string\">\"Organization Name (eg, company) [eg test.com]:\"</span> o_name\n\nca_key=<span class=\"hljs-string\">\"/etc/pki/CA/private/cakey.pem\"</span>\nca_pub=<span class=\"hljs-string\">\"/etc/pki/CA/cacert.pem\"</span>\n\n<span class=\"hljs-keyword\">if</span> [ -f  <span class=\"hljs-variable\">$ca_key</span> ];<span class=\"hljs-keyword\">then</span>\n    <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-variable\">$ca_key</span> is esxit.\n    <span class=\"hljs-built_in\">exit</span> 1\n<span class=\"hljs-keyword\">else</span>\n    (<span class=\"hljs-built_in\">umask</span> 066;openssl genrsa -out <span class=\"hljs-variable\">$ca_key</span>  4096) &amp;&gt;/dev/null\n\n    <span class=\"hljs-built_in\">echo</span> -e <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$c_name</span>\\n<span class=\"hljs-variable\">$p_name</span>\\n\\n<span class=\"hljs-variable\">$o_name</span>\\n\\nca.<span class=\"hljs-variable\">$o_name</span>\\n\\n\"</span>|openssl req -new -x509 -key <span class=\"hljs-variable\">$ca_key</span> -out <span class=\"hljs-variable\">$ca_pub</span> -days <span class=\"hljs-variable\">$c_time</span> &amp;&gt; /dev/null\n<span class=\"hljs-keyword\">fi</span>\n\ntouch /etc/pki/CA/index.txt\n<span class=\"hljs-built_in\">echo</span> 01 &gt; /etc/pki/CA/serial\n\n<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-variable\">$ca_key</span> <span class=\"hljs-variable\">$ca_pub</span> is ok,day is <span class=\"hljs-variable\">$c_time</span>\n</code></pre>\n<p>ca_client.sh</p>\n\n    <pre><code class=\"lang-shell\"><span class=\"hljs-meta\">#!/bin/bash\n</span>\n<span class=\"hljs-built_in\">read</span> -p <span class=\"hljs-string\">\"Please enter the certificate is valid(The unit is day):\"</span> c_time\n\nkey_client=<span class=\"hljs-string\">\"/etc/pki/tls/private/test.key\"</span>\n\n(<span class=\"hljs-built_in\">umask</span> 077;openssl genrsa -out <span class=\"hljs-variable\">$key_client</span> 1024) &amp;&gt; /dev/null\n\nopenssl req -new -key <span class=\"hljs-variable\">$key_client</span>  -out  /etc/pki/tls/test.csr -days <span class=\"hljs-variable\">$c_time</span> &amp;&gt; /dev/null\n</code></pre>\n<p>手工</p>\n<blockquote>\n<p>scp root@ip_client:/etc/pki/tls/test.csr 至ca_server</p>\n<p>openssl ca -in test.csr  -out /etc/pki/CA/certs/test.crt -days 365</p>\n</blockquote>\n","categories":[{"name":"Linux","path":"api/categories/Linux.json"}],"tags":[{"name":"Ca","path":"api/tags/Ca.json"}]}