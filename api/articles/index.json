{"title":"notes","slug":"index","date":"2017-04-02T04:00:09.000Z","updated":"2017-11-19T13:15:37.000Z","comments":true,"excerpt":"","content":"<h1 id=\"复习\"><a href=\"#复习\" class=\"headerlink\" title=\"复习\"></a>复习</h1><p>PS1</p>\n\n    <pre><code class=\"lang-shell\">PS1=\"\\[<span class=\"hljs-string\">\\E[31m\\</span>][<span class=\"hljs-symbol\">\\u@\\h \\w</span>]\\\\$\\[\\e[0m\\]]\"\n</code></pre>\n<p>\\e \\033         \\u 当前用户<br>\\h 主机名简称     \\H 主机名<br>\\w 当前工作目录     \\W 当前工作目录基名<br>\\t 24小时时间格式\\T 12小时时间格式<br>! 命令历史数     #开机后命令历史数</p>\n<h2 id=\"shell中可执行命令有两类\"><a href=\"#shell中可执行命令有两类\" class=\"headerlink\" title=\"shell中可执行命令有两类\"></a>shell中可执行命令有两类</h2><p>内部命令:由shell自带的，而且可以通过某命令形式提供</p>\n<pre><code>help 内部命令列表\nenable cmd 启用\nenable -n cmd 禁用内部命令\nenable -n 查看所有禁用的内部命令\n</code></pre><p>外部命令:在文件系统路径下有对应的可执行程序文件</p>\n<h2 id=\"查看路径-which-a-–skip-alias-whereis\"><a href=\"#查看路径-which-a-–skip-alias-whereis\" class=\"headerlink\" title=\"查看路径:which -a | –skip-alias; whereis\"></a>查看路径:which -a | –skip-alias; whereis</h2><h2 id=\"查看制定的命令是内部还是外部-type-command\"><a href=\"#查看制定的命令是内部还是外部-type-command\" class=\"headerlink\" title=\"查看制定的命令是内部还是外部 type command\"></a>查看制定的命令是内部还是外部 type command</h2><h2 id=\"执行外部命令\"><a href=\"#执行外部命令\" class=\"headerlink\" title=\"执行外部命令\"></a>执行外部命令</h2><h3 id=\"Hash缓存表\"><a href=\"#Hash缓存表\" class=\"headerlink\" title=\"Hash缓存表\"></a>Hash缓存表</h3><pre><code>系统初始hash表为空，当外部命令执行时，默认会到PATH路径下寻找该命令，找到后会将这条命令的路径记录到hash表中，当再次使用该命令时，shell解释器首先会查看hash表，存在将执行之，如果不存在，将会去path路径下寻找。利用hash缓存表可大大提供命令的调用速率。\n</code></pre><h3 id=\"常见的用法\"><a href=\"#常见的用法\" class=\"headerlink\" title=\"常见的用法\"></a>常见的用法</h3><pre><code>hash 显示hash缓存\nhash -l 显示hash缓存，可作为输入使用\nhash -p path name 将命令全路径path起别名为name\nhash -t name 打印缓存中name的路径\nhash -d name 清除name缓存\nhash -r 清楚缓存\n</code></pre><h3 id=\"如果命令别名同原命令同名，如果要执行原命令，可使用-command\"><a href=\"#如果命令别名同原命令同名，如果要执行原命令，可使用-command\" class=\"headerlink\" title=\"如果命令别名同原命令同名，如果要执行原命令，可使用\\command\"></a>如果命令别名同原命令同名，如果要执行原命令，可使用\\command</h3><h3 id=\"date\"><a href=\"#date\" class=\"headerlink\" title=\"date\"></a>date</h3><p>系统时钟:由Linux内核通过cpu工作频率进行的<br>硬件时钟:主板<br>hwclock,clock:显示硬件时钟<br>/etc/localtime 时区</p>\n<h3 id=\"screen\"><a href=\"#screen\" class=\"headerlink\" title=\"screen\"></a>screen</h3><p>创建:screen -S [session]<br>键入:screen -x<br>剥离当前screen会话:ctrl+a,d<br>显示所有:screen -ls<br>恢复:screen -r </p>\n<h2 id=\"echo\"><a href=\"#echo\" class=\"headerlink\" title=\"echo\"></a>echo</h2><p>-E 默认 不支持\\解释功能<br>-n 不自动换行<br>-e 启用\\字符的解释功能</p>\n<pre><code>\\a 发出警告声\n\\b 退格键\n\\c 最后不加上换行符号\n\\n 换行且光标移至行首\n\\r 回车，即光标移至行首\n\\t 插入tab\n\\\\插入\\字符\n\\0nnn 插入nnn(八进制) 所代表的ASCII字符\n\\xHH插入HH(十六进制) 所代表的ASCII字\n</code></pre><h2 id=\"双击TAB键\"><a href=\"#双击TAB键\" class=\"headerlink\" title=\"双击TAB键\"></a>双击TAB键</h2><p>command 2tab 所有命令行补全<br>string2tab 以string开头命令<br>/2tab 显示所有根目录下一级目录，包括隐藏目录<br>./2tab 当前目录下的子目录，包括隐藏目录<br>*2tab 当前目录下子目录，不包括隐藏目录<br>～2tab 所有用户列表<br>$2tab 所有变量<br>@2tab /etc/hosts记录<br>=2tab 相当与ls -A</p>\n<h2 id=\"命令行历史\"><a href=\"#命令行历史\" class=\"headerlink\" title=\"命令行历史\"></a>命令行历史</h2><p>重复前一个命令，有四种方法<br>    ！！<br>    ！-1<br>    ctrl + p<br>    上方向键<br>ctrl + n 显示当前历史中的下一条命令，但不执行<br>！n 执行history命令输出对应序号n的命令<br>！-n 执行history历史中倒数的第n个命令<br>！string 重复前一个以“string”开头的命令<br>！string:p 仅打印 不执行<br>！$:p 打印输出!$的内容<br>！<em>:p 打印输出!</em>(所有参数)的内容<br>^string 删除上一条命令中的string<br>^string1^string2 将上一条命令中的第一个string1替换为string2<br>!!:gs/string1/string2 将上一条命令中所有的string1都替换为string2<br>调用前一个命令的最后一个参数:$!;esc .;alt .;<br>command !^:上一个命令的一个参数做cmd的参数<br>    !$:最后一个参数<br>    !<em>:全部参数<br>    !:n:第n个参数<br>command !n:^ 调用第n条命令的第一个参数<br>    !n:$<br>    !n:m<br>    !n:</em><br>command !string:^ 从命令历史中搜索以string开头的命令，并获取它的第一个参数<br>    !string:$<br>    !string:n<br>    !string:*<br>history<br>    -c 情况命令历史<br>    -d offset 删除历史中第offset个命令<br>     n 显示最近的n条历史<br>    -a 追加本次会话新执行的命令历史列表至历史文件<br>    -n 读历史文件中未读的行到历史列表<br>    -r 读历史文件附加到历史列表<br>    -w 保存历史列表到指定的历史文件<br>    -p 展开历史参数成多行，但不存在历史列表中<br>    -s 展开历史参数成一行，附加在历史列表后<br>HISTSIZE：命令历史记录的条数<br>HISTFILE：指定历史文件，默认为～/.bash_history<br>HISTFILESIZE:命令历史文件记录历史的条数<br>HISTTIMEFORMAT=“%F %T” 显示时间<br>HISTIGNORE=“str1:str2:…” 忽略string1,string2历史<br>控制命令历史的记录方式:<br>环境变量:HISTCONTROL</p>\n<pre><code>ignoredups 默认,忽略重复的命令，连续且相同为”重复“\nignorespace 忽略所有以空白开头的命令\nignoreboth edups and space\nerasedups 删除重复命令\n</code></pre><p>export 变量名=”值“</p>\n<p>bash 快捷键<br>ctrl + l 清屏<br>ctrl + o 执行当前命令，并重新显示本命令<br>ctrl + s 阻止屏幕输出，锁定<br>ctrl + q 允许屏幕输出<br>ctrl + c 终止命令<br>ctrl + z 挂起命令<br>ctrl + a 光标移动到命令行首,相当与home<br>ctrl + e 光标移动到行尾，相当与end<br>ctrl + f 光标向右移动一个字符<br>ctrl + b 光标向左移动一个字符<br>alt + f 光标向右移动一个单词尾<br>alt + b 光标向左移动一个单词首<br>ctrl + xx 光标在命令行首和光标之间移动<br>ctrl + u 从光标处删除至命令行尾<br>ctrl + k 从光标处删除至命令行尾<br>ctrl + w 从光标处向左删除只单词首<br>alt + d 从光标处向右删除至单词尾<br>ctrl + d 删除光标处的一个字符<br>ctrl + h 删除光标前的一个字符<br>ctrl + y 将删除的字符粘贴至光标后<br>alt + c 从光标出开始向右更改为首字母大写的单词<br>alt + u 从光标处开始向右更改为全部大写的单词<br>alt + l 从光标处更改为全部小写的单词<br>ctrl + t 交换光标处和之前字符位置<br>alt + t 交换光标处和之前的单词位置<br>alt + N 提示输入指定字符后，重复显示该字符Ｎ次<br>注意:alt组合快捷键经常和其他软件冲突</p>\n","categories":[{"name":"Linux","path":"api/categories/Linux.json"}],"tags":[{"name":"Linux","path":"api/tags/Linux.json"},{"name":"Notes","path":"api/tags/Notes.json"}]}