{"title":"httpd常见指令及其配置","slug":"httpd-notes","date":"2017-04-20T01:54:53.000Z","updated":"2017-11-19T13:15:37.000Z","comments":true,"excerpt":"","content":"<h2 id=\"HTTPD\"><a href=\"#HTTPD\" class=\"headerlink\" title=\"HTTPD\"></a>HTTPD</h2><p><strong>Apache常用的配置指令</strong></p>\n<ul>\n<li><p>ServerTokens Http响应头，默认会包含apache详细版本号及php版本号</p>\n<ul>\n<li><p>语法：</p>\n<blockquote>\n<p>ServerTokens Major|Min|Pord|OS|Full</p>\n</blockquote>\n</li>\n<li><p>默认值为 ServerToken OS</p>\n</li>\n<li><p>模块 core,这个指令控制服务器回应给客户端的＂Server:”应答头是否包含关于服务器操作系统和编译进的模块描述信息．</p>\n</li>\n</ul>\n</li>\n<li><p>ServerRoot “/etc/httpd”　指明配置文件存放多位置</p>\n</li>\n<li><p>DocumentRoot  网页根目录</p>\n</li>\n<li><p>ServerName www.test.com:80</p>\n<blockquote>\n<p>定义网站域名</p>\n<p>需要借助DNS将域名解析到服务器IP</p>\n</blockquote>\n</li>\n<li><p>AddDefaultCharset UTF-8|GBK|GB2312|GB18030 设定默认字符集</p>\n<p>​</p>\n</li>\n</ul>\n<p><strong>Http请求处理多连接访问</strong></p>\n<ul>\n<li><p>非保持连接(短连接)</p>\n<blockquote>\n<p>对于大量并发场景中，短连接多三次握手以及四次挥手会占据大量带宽</p>\n</blockquote>\n</li>\n<li><p>保持连接(长连接) Keep-alive</p>\n<blockquote>\n<p>避免过多多连接保持，可以从时间和数量两个维度对长连接加以限制,Http2.4支持毫秒级别多限制</p>\n</blockquote>\n<p><strong>三个参数</strong></p>\n<ul>\n<li>KeepAlive On|Off</li>\n<li>KeepAlive Timeout  15</li>\n<li>MaxKeepAliveRequests 100</li>\n</ul>\n<p><strong>用Telnet测试</strong></p>\n\n    <pre><code class=\"lang-shell\">[root@test ~]# telnet 127.0.0.1 80\nTrying 127.0.0.1...\nConnected to 127.0.0.1.\nEscape character is '^]'.\nGET / HTTP/1.1\nHost:172.18.50.61\n\nHTTP/1.1 200 OK\nDate: Thu, 20 Apr 2017 02:45:55 GMT\nServer: Apache\nLast-Modified: Thu, 20 Apr 2017 02:16:22 GMT\nETag: \"24bf8<span class=\"hljs-string\">-5</span><span class=\"hljs-string\">-54</span>d8fba2fe78d\"\nAccept-Ranges: bytes\nContent-Length: 5\nContent-Type: text/html; charset=UTF<span class=\"hljs-string\">-8</span>\n\n<span class=\"hljs-keyword\">test\n</span>Connection closed by foreign host.\n</code></pre>\n</li>\n</ul>\n<p><strong>MPM详细配置</strong></p>\n<ul>\n<li>查看Httpd程序多模块列表<ul>\n<li>httpd -l　查看静态编译多模块</li>\n<li>httpd -M 查看静态编译及动态编译多模块</li>\n</ul>\n</li>\n</ul>\n\n    <pre><code class=\"lang-shell\">[root@test ~]<span class=\"hljs-meta\"># httpd -M | grep prefork</span>\nhttpd: Could <span class=\"hljs-keyword\">not</span> reliably determine the server's fully qualified domain name, <span class=\"hljs-keyword\">using</span> test.<span class=\"hljs-function\">com <span class=\"hljs-keyword\">for</span> ServerName\n <span class=\"hljs-title\">mpm_prefork_module</span> <span class=\"hljs-params\">(<span class=\"hljs-keyword\">static</span>)</span>\nSyntax OK\n</span></code></pre>\n<blockquote>\n<p>在apache2.2中,MPM模块不支持动态装卸载</p>\n</blockquote>\n<ul>\n<li><p>prefork</p>\n\n    <pre><code class=\"lang-shell\">&lt;IfModule prefork.c&gt;\nStartServers       <span class=\"hljs-number\">8</span>        服务进程启动时启动多少个空闲进程\nMinSpareServers    <span class=\"hljs-number\">5</span>        最少空闲进程数，如果少于５，主控进程会再启动几个，使空闲进程到达<span class=\"hljs-number\">5</span>\nMaxSpareServers   <span class=\"hljs-number\">20</span>        最大空闲进程数，如果到达<span class=\"hljs-number\">20</span>,则会被回收\nServerLimit      <span class=\"hljs-number\">256</span>        所允许启动的最大在线进程数\nMaxClients       <span class=\"hljs-number\">256</span>        最大允许启动进程数量响应用户请求\nMaxRequestsPerChild  <span class=\"hljs-number\">4000</span>　　每个进程最多可以处理多少个请求，超过则销毁\n&lt;/IfModule&gt;\n</code></pre>\n</li>\n</ul>\n<ul>\n<li><p>woker</p>\n\n    <pre><code class=\"lang-shell\">&lt;IfModule worker.c&gt;\nStartServers         <span class=\"hljs-number\">4</span>        服务器启动是启动多少个空闲进程\nMaxClients         <span class=\"hljs-number\">300</span>        最大并发响应数量\nMinSpareThreads     <span class=\"hljs-number\">25</span>        最小空闲线程\nMaxSpareThreads     <span class=\"hljs-number\">75</span>        最大空闲线程\nThreadsPerChild     <span class=\"hljs-number\">25</span>        每个进程启动<span class=\"hljs-number\">25</span>个线程\nMaxRequestsPerChild  <span class=\"hljs-number\">0</span>        每个进程可以处理无限个请求\n&lt;/IfModule&gt;\n</code></pre>\n</li>\n<li><p>event</p>\n</li>\n</ul>\n<blockquote>\n<p>Centos 6上同时提供了三个二进制文件(/usr/sbin/httpd  /usr/sbin/httpd.event  /usr/sbin/httpd.worker)，分别对应不同多MPM支持，默认使用prefork,可以使用http -l查看</p>\n<p>可以通过修改/etc/sysconfig/httpd的HTTPD=/usr/sbin/httpd.worker切换MPM</p>\n</blockquote>\n<p><strong>DOS动态装卸载</strong></p>\n<ul>\n<li><p>LoadModule <mod_name><mod_path></mod_path></mod_name></p>\n<blockquote>\n<p>模块文件路径使用相对路径</p>\n</blockquote>\n</li>\n</ul>\n<p><strong>Http站点访问控制</strong></p>\n<pre><code>* 文件系统/URL路径\n\n  \\&lt;Directory &quot;/var/www/html&quot;&gt;\n\n  ...\n\n  \\&lt;/Directory&gt;\n\n  ​\n\n  \\&lt;File &quot; &quot;&gt;\n\n  ...\n\n  \\&lt;/File&gt;\n\n  ​\n\n  \\&lt;FileMatch &quot;PATTERN&quot;&gt;\n\n  ...\n\n  \\&lt;/FileMatch&gt;\n</code></pre><blockquote>\n<p>使用正则表达式模式匹配</p>\n<p>\\<location \"\"=\"\"></location></p>\n<p>…</p>\n<p>\\</p>\n</blockquote>\n<ul>\n<li><p>Options Indexes FollowSymlinks</p>\n<blockquote>\n<p>Options定义此目录内资源访问的特性，控制被定义多目录下所指定多各种资源多被访问模式，后跟一个或多个空白字符分割多选项列表</p>\n<p>indexs指明多URL路径不存在与定义多主页面资源相符的资源文件时候，返回索引列表给用户，目录浏览功能，一般关掉</p>\n<p>FollowSymlinks 允许跟踪符号连接文件所指向的源文件</p>\n<p>跟踪符号链接，如果目录下存在软连接，则可以访问软连接指向多文件</p>\n<p>Includes     //允许启用服务端包含</p>\n<p>SymLinlifOwnerMatch        //源文件和链接多目标文件多属主属组相同多时候才允许跟踪访问</p>\n<p>ExecCGI        //允许执行CGI脚本</p>\n<p>MultiViews        //允许执行内容协商</p>\n<p>None        //全部都不</p>\n<p>ALL            //所有都</p>\n<p>AllowOverride    //与访问控制相关的那些执行可以放在.htacesss文件中，每个目录下都可以有一个，但是使用.htacess会使网站对目录多资源解析变多非常慢，不推荐使用。</p>\n</blockquote>\n</li>\n<li><p>基于源地址定义访问规则</p>\n<blockquote>\n<p>Order    allow,deny</p>\n<p>ALlow    for    all</p>\n<p>Order定义生效法则，写在后面表示默认法则</p>\n<p>Allow from all，Deny from 来源ip或者网络地址</p>\n<p>示例:</p>\n<p>​    Order allow,deny</p>\n<p>​    Deny from 172.18.100.1</p>\n<p>​    allow form 172.18</p>\n<p>仅仅允许172.18除了100.1的地址访问</p>\n<p>​</p>\n<p>目录别名</p>\n<p>vim /etc/httpd/conf/httpd.conf</p>\n<p>/Alias后加</p>\n<p>Alias /aa/ “var/www/html/bb/“</p>\n<p>后面必须为绝对路径</p>\n</blockquote>\n</li>\n</ul>\n<p><strong>Http日志相关设定</strong></p>\n<ul>\n<li><p>错误日志</p>\n<blockquote>\n<p>定义: ErrorLog logs/error_log</p>\n</blockquote>\n</li>\n<li><p>错误日志级别</p>\n<ul>\n<li>debug    所有信息，只要产生就全部记录</li>\n<li>info         所有多信息数据</li>\n<li>notice     引起注意</li>\n<li>warn       警告</li>\n<li>error       发生错误</li>\n<li>crit           级别很严重</li>\n<li>alert         红色警戒</li>\n<li>emerg      引起恐慌</li>\n</ul>\n</li>\n<li><p>访问日志</p>\n<blockquote>\n<p>定义 CustomLog logs/access_log combined</p>\n<p>格式 日志路径 日志格式{combined|common|referer|agent}</p>\n<p>日志格式定义</p>\n<blockquote>\n<p>LogFormat “%h %l %u %t \\”%r\\” %&gt;s %b \\”%{Referer}i\\” \\”%{User-Agent}i\\”” combined<br>LogFormat “%h %l %u %t \\”%r\\” %&gt;s %b” common<br>LogFormat “%{Referer}i -&gt; %U” referer<br>LogFormat “%{User-agent}i” agent</p>\n</blockquote>\n<p>“%h %l %u”可以称为宏或者是通配符</p>\n<p>日志格式示例</p>\n<p>172.18.100.7 - - [20/Apr/2017:14:58:02 +0800] “GET /a/ HTTP/1.1” 404 262 “-“ “Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:52.0) Gecko/20100101 Firefox/52.0”</p>\n<p>客户端地址 登录名 认证名 时间 请求首部 状态吗 响应报文大小 从那个页面跳过来 浏览器类型</p>\n</blockquote>\n</li>\n</ul>\n<p><strong>基于用户的访问控制</strong></p>\n<ul>\n<li><p>常见多用户认证方式</p>\n<blockquote>\n<p>http协议自身提供多认证(明文)–&gt;basic 明文认证</p>\n<p>表单认证–&gt;digest消息摘要认证</p>\n</blockquote>\n</li>\n<li><p>认证质询</p>\n<blockquote>\n<p>www-authenticate</p>\n<p>​    响应码为401,拒绝客户端请求，并说明要求提供客户端帐号密码</p>\n<p>authorization    </p>\n<p>​    客户端用户填入帐号密码后再次发送请求报文，认证通过时，则服务器发送响应多资源</p>\n<p>安全域，需要用户认证后才能访问多路径。应该通过名称对其进行标识，以便告知用户认证多原因</p>\n<p>用户帐号密码存放多位置</p>\n<p>​    虚拟帐号:仅用于访问某服务时用到多认证标识</p>\n<p>​    存储: 文本文件、sql数据库、LDAP轻量级目录访问协议</p>\n</blockquote>\n</li>\n<li><p>Basic认证配置步骤</p>\n<blockquote>\n<directiry \"\"=\"\">\n\n<p>AuthType Basic<br>AuthName “String”<br>AuthUserFile “/PATH/TO/HTTPD_USER_PASSWD_FILE”</p>\n<p># AuthGroupFile “/PATH/TO/HTTPD_GROUP_FILE” #基于组来认证<br>Require user username1 username2…</p>\n<p># Require group grpname1 grpname2 …</p>\n<p></p>\n<p>示例:</p>\n<blockquote>\n<directory \"=\"\" data=\"\" www=\"\"><br>Options None<br>AllowOverride None<br>AuthType Basic<br>AuthName “Admin Realm,show something”<br>AuthUserFile “/etc/httpd/conf/.htpasswd”<br>Require user tom<br><br># Require user vaild-user //允许所有用户登录<br><br></directory>\n\n</blockquote>\n<p>新建密码文件</p>\n<p>htpasswd -c -m /etc/httpd/conf/.htpasswd</p>\n<p>​    -c 第一次创建密码文件时使用</p>\n<p>​    -m md5</p>\n<p>​    -s force sha encrypt the password</p>\n<p>​    -D delete the spacifien user</p>\n</directiry></blockquote>\n</li>\n</ul>\n<p><strong>Http虚拟主机</strong></p>\n<ul>\n<li><p>实现方式</p>\n<ul>\n<li>基于ip</li>\n<li>基于port</li>\n<li>基于FQDN</li>\n</ul>\n</li>\n<li><p>配置</p>\n<ul>\n<li><p>注释DocumentRoot指令，禁用Main主机</p>\n</li>\n<li><p>配置语法</p>\n<blockquote>\n<virtualhost ip:port=\"\"><br><br>​    ServerName FQDN<br><br>​    DocumentRoot “ “ //站点路径<br><br></virtualhost>\n\n<p>可用的指令</p>\n<p>​    ServerAlias           虚拟主机的别名</p>\n<p>​    Errorlog            </p>\n<p>​    CustomLog        日志</p>\n<p>​    <directory \"\"=\"\"> ..</directory></p>\n</blockquote>\n</li>\n<li><p>示例</p>\n\n    <pre><code class=\"lang-shell\"><span class=\"hljs-section\">&lt;VirtualHost 172.18.50.61:80&gt;</span>\n    <span class=\"hljs-attribute\"><span class=\"hljs-nomarkup\">DocumentRoot</span></span> /data/www/a\n<span class=\"hljs-section\">&lt;/VirtualHost&gt;</span>\n\n<span class=\"hljs-section\">&lt;VirtualHost 172.18.50.61:800&gt;</span>\n    <span class=\"hljs-attribute\"><span class=\"hljs-nomarkup\">DocumentRoot</span></span> /data/www/b\n<span class=\"hljs-section\">&lt;/VirtualHost&gt;</span>\n</code></pre>\n</li>\n</ul>\n</li>\n</ul>\n<p><strong>Http状态页面</strong></p>\n<ul>\n<li><p>开启status模块</p>\n<blockquote>\n<p>LoadModule status_module modules/mod_status.so</p>\n</blockquote>\n</li>\n<li><p>启动状态访问页面</p>\n<blockquote>\n<location server-status=\"\"><br><br>    SetHandler server-status<br>    Order deny,allow<br>    Allow from all<br>    Allow from .example.com<br></location>\n</blockquote>\n</li>\n<li><p>工作进程状态</p>\n<ul>\n<li>- 等待连接请求</li>\n<li>Ｗ正处于工作状态　发送响应报文进程</li>\n<li>S  正在创建</li>\n<li>R 正在读取请求</li>\n<li>K 正在保持连接</li>\n<li>D 正在执行DNS查询</li>\n<li>C 正在关闭连接</li>\n<li>L 正在记录日志</li>\n<li>G 正在优雅多关闭</li>\n</ul>\n</li>\n</ul>\n","categories":[],"tags":[{"name":"web","path":"api/tags/web.json"},{"name":"Httpd","path":"api/tags/Httpd.json"}]}